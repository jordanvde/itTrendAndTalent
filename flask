https://realpython.com/kickstarting-flask-on-ubuntu-setup-and-deployment/
https://linode.com/docs/applications/big-data/how-to-move-machine-learning-model-to-production/


installeren van volgende packages
python 
python-pip 
python-virtualenv 
nginx 
gunicorn
keras 
tensorflow
h5py
pillow
flask 
numpy

creeren van app.py

from flask import Flask, jsonify, request
import numpy as np
import PIL
from PIL import Image
from keras.models import load_model

app = Flask(__name__)
model = load_model('/var/www/flaskapi/flaskapi/my_model.h5')

@app.route('/')
def index():
    return 'Flask is running!'

@app.route('/data')
def names():
    data = {"names": ["John", "Jacob", "Julie", "Jennifer"]}
    return jsonify(data)

@app.route('/predict', methods=["POST"])
def predict_image():
        # Preprocess the image so that it matches the training input
    image = request.files['file']
    image = Image.open(image)
    image = np.asarray(image.resize((28,28)))
    image = image.reshape(1,1,28,28)
    # Use the loaded model to generate a prediction.
    pred = model.predict(image)
    # Prepare and send the response.
    digit = np.argmax(pred)
    prediction = {'digit':int(digit)}
    return jsonify(prediction)

if __name__ == '__main__':
    app.run()
    
    
Bij het gebruik van sudo gunicorn app:app -b localhost:8000 wou het niet lukken
Na verder te lezen hierover vind je terug dat je niet localhost, maar wel 0.0.0.0 moet gebruiken
http://timmyreilly.azurewebsites.net/running-flask-on-ubuntu-vm/
sudo gunicorn app:app -b 0.0.0.0:8000 --reload


Je moet ook niet vergeten om de poorten open stellen van de Virtuele machine.
Hier gebruik ik poort 8000
Azure geeft jou ook de mogelijkheid om een DNS naam in te stellen.

